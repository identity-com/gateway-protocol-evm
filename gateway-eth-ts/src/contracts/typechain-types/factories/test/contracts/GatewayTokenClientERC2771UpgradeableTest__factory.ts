/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GatewayTokenClientERC2771UpgradeableTest,
  GatewayTokenClientERC2771UpgradeableTestInterface,
} from "../../../test/contracts/GatewayTokenClientERC2771UpgradeableTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gatewayToken",
        type: "address",
      },
    ],
    name: "IsGated__InvalidGatewayToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Success",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gatewayTokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gatekeeperNetwork",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "trustedForwarders",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testGated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5060805161107b61004c600039600081816101bd015281816102060152818161028e015281816102ce015261034a015261107b6000f3fe6080604052600436106100765760003560e01c80633659cfe61461007b5780634f1ef2861461009d57806352d1902d146100b0578063572b6c05146100d85780636d91457a14610121578063715018a6146101415780638da5cb5b14610156578063968f76bd1461017e578063f2fde38b14610193575b600080fd5b34801561008757600080fd5b5061009b610096366004610cb3565b6101b3565b005b61009b6100ab366004610ce4565b610284565b3480156100bc57600080fd5b506100c561033d565b6040519081526020015b60405180910390f35b3480156100e457600080fd5b506101116100f3366004610cb3565b6001600160a01b031660009081526033602052604090205460ff1690565b60405190151581526020016100cf565b34801561012d57600080fd5b5061009b61013c366004610da6565b6103eb565b34801561014d57600080fd5b5061009b610504565b34801561016257600080fd5b506036546040516001600160a01b0390911681526020016100cf565b34801561018a57600080fd5b5061009b610518565b34801561019f57600080fd5b5061009b6101ae366004610cb3565b6105fa565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102045760405162461bcd60e51b81526004016101fb90610e30565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610236610670565b6001600160a01b03161461025c5760405162461bcd60e51b81526004016101fb90610e7c565b6102658161068c565b6040805160008082526020820190925261028191839190610694565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102cc5760405162461bcd60e51b81526004016101fb90610e30565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102fe610670565b6001600160a01b0316146103245760405162461bcd60e51b81526004016101fb90610e7c565b61032d8261068c565b61033982826001610694565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d85760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016101fb565b50600080516020610fff83398151915290565b600054610100900460ff161580801561040b5750600054600160ff909116105b806104255750303b158015610425575060005460ff166001145b6104885760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016101fb565b6000805460ff1916600117905580156104ab576000805461ff0019166101001790555b6104b785858585610804565b80156104fd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050505050565b61050c61085b565b61051660006108d4565b565b6034546001600160a01b03168063ff17e232610532610926565b6035546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381865afa15801561057e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a29190610ec8565b6105ce576034546040516355ec9bfb60e11b81526001600160a01b0390911660048201526024016101fb565b6040517f395a9ab3d1230297d931e1fa224ca597ca0e45f620c1aeb74b512bfcc6f66aab90600090a150565b61060261085b565b6001600160a01b0381166106675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101fb565b610281816108d4565b600080516020610fff833981519152546001600160a01b031690565b61028161085b565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156106cc576106c783610935565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610726575060408051601f3d908101601f1916820190925261072391810190610eea565b60015b6107895760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016101fb565b600080516020610fff83398151915281146107f85760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016101fb565b506106c78383836109d1565b600054610100900460ff1661082b5760405162461bcd60e51b81526004016101fb90610f03565b603480546001600160a01b0319166001600160a01b038616179055603583905561085582826109f6565b50505050565b610863610926565b6001600160a01b031661087e6036546001600160a01b031690565b6001600160a01b0316146105165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fb565b603680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000610930610a2f565b905090565b6001600160a01b0381163b6109a25760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101fb565b600080516020610fff83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6109da83610a59565b6000825111806109e75750805b156106c7576108558383610a99565b600054610100900460ff16610a1d5760405162461bcd60e51b81526004016101fb90610f03565b610a25610b8d565b6103398282610bb4565b3360009081526033602052604081205460ff1615610a54575060131936013560601c90565b503390565b610a6281610935565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610b015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101fb565b600080846001600160a01b031684604051610b1c9190610f72565b600060405180830381855af49150503d8060008114610b57576040519150601f19603f3d011682016040523d82523d6000602084013e610b5c565b606091505b5091509150610b84828260405180606001604052806027815260200161101f60279139610c4d565b95945050505050565b600054610100900460ff166105165760405162461bcd60e51b81526004016101fb90610f03565b600054610100900460ff16610bdb5760405162461bcd60e51b81526004016101fb90610f03565b60005b818110156106c757600160336000858585818110610bfe57610bfe610f8e565b9050602002016020810190610c139190610cb3565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610c4581610fa4565b915050610bde565b60608315610c5c575081610c66565b610c668383610c6d565b9392505050565b815115610c7d5781518083602001fd5b8060405162461bcd60e51b81526004016101fb9190610fcb565b80356001600160a01b0381168114610cae57600080fd5b919050565b600060208284031215610cc557600080fd5b610c6682610c97565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610cf757600080fd5b610d0083610c97565b9150602083013567ffffffffffffffff80821115610d1d57600080fd5b818501915085601f830112610d3157600080fd5b813581811115610d4357610d43610cce565b604051601f8201601f19908116603f01168101908382118183101715610d6b57610d6b610cce565b81604052828152886020848701011115610d8457600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008060008060608587031215610dbc57600080fd5b610dc585610c97565b935060208501359250604085013567ffffffffffffffff80821115610de957600080fd5b818701915087601f830112610dfd57600080fd5b813581811115610e0c57600080fd5b8860208260051b8501011115610e2157600080fd5b95989497505060200194505050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b600060208284031215610eda57600080fd5b81518015158114610c6657600080fd5b600060208284031215610efc57600080fd5b5051919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60005b83811015610f69578181015183820152602001610f51565b50506000910152565b60008251610f84818460208701610f4e565b9190910192915050565b634e487b7160e01b600052603260045260246000fd5b600060018201610fc457634e487b7160e01b600052601160045260246000fd5b5060010190565b6020815260008251806020840152610fea816040850160208701610f4e565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212203ef0381aa4850f96b96e0cb5ee8e01d0406c1d888cb3419034bc489bd2294ee664736f6c63430008130033";

type GatewayTokenClientERC2771UpgradeableTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayTokenClientERC2771UpgradeableTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayTokenClientERC2771UpgradeableTest__factory extends ContractFactory {
  constructor(
    ...args: GatewayTokenClientERC2771UpgradeableTestConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GatewayTokenClientERC2771UpgradeableTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<GatewayTokenClientERC2771UpgradeableTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): GatewayTokenClientERC2771UpgradeableTest {
    return super.attach(address) as GatewayTokenClientERC2771UpgradeableTest;
  }
  override connect(
    signer: Signer
  ): GatewayTokenClientERC2771UpgradeableTest__factory {
    return super.connect(
      signer
    ) as GatewayTokenClientERC2771UpgradeableTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayTokenClientERC2771UpgradeableTestInterface {
    return new utils.Interface(
      _abi
    ) as GatewayTokenClientERC2771UpgradeableTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatewayTokenClientERC2771UpgradeableTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GatewayTokenClientERC2771UpgradeableTest;
  }
}
