/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  GatewayTokenClientERC2771Test,
  GatewayTokenClientERC2771TestInterface,
} from "../../../test/contracts/GatewayTokenClientERC2771Test";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "gatewayTokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gatekeeperNetwork",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gatewayToken",
        type: "address",
      },
    ],
    name: "IsGated__InvalidGatewayToken",
    type: "error",
  },
  {
    inputs: [],
    name: "IsGated__ZeroContractAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Success",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "testGated",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161040e38038061040e83398101604081905261002f916100eb565b6040805160008082526020820190925283918391905b81518110156100a957600160008084848151811061006557610065610125565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806100a18161013b565b915050610045565b50506001600160a01b0382166100d25760405163ccac40d160e01b815260040160405180910390fd5b6001600160a01b0390911660805260a052506101629050565b600080604083850312156100fe57600080fd5b82516001600160a01b038116811461011557600080fd5b6020939093015192949293505050565b634e487b7160e01b600052603260045260246000fd5b60006001820161015b57634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a05161028261018c600039600060e30152600081816087015261016601526102826000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063572b6c051461003b578063968f76bd1461007b575b600080fd5b6100676100493660046101fa565b6001600160a01b031660009081526020819052604090205460ff1690565b604051901515815260200160405180910390f35b610083610085565b005b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03811663ff17e2326100bd6101c3565b6040516001600160e01b031960e084901b1681526001600160a01b0390911660048201527f00000000000000000000000000000000000000000000000000000000000000006024820152604401602060405180830381865afa158015610127573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014b919061022a565b610197576040516355ec9bfb60e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016600482015260240160405180910390fd5b6040517f395a9ab3d1230297d931e1fa224ca597ca0e45f620c1aeb74b512bfcc6f66aab90600090a150565b3360009081526020819052604081205460ff1680156101e3575060143610155b156101f5575060131936013560601c90565b503390565b60006020828403121561020c57600080fd5b81356001600160a01b038116811461022357600080fd5b9392505050565b60006020828403121561023c57600080fd5b8151801515811461022357600080fdfea26469706673582212207ce686eeefa59a8800326212dcb709fbf046a86718a8c5aa2fac6a97aed4584b64736f6c63430008130033";

type GatewayTokenClientERC2771TestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayTokenClientERC2771TestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayTokenClientERC2771Test__factory extends ContractFactory {
  constructor(...args: GatewayTokenClientERC2771TestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    gatewayTokenContract: PromiseOrValue<string>,
    gatekeeperNetwork: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GatewayTokenClientERC2771Test> {
    return super.deploy(
      gatewayTokenContract,
      gatekeeperNetwork,
      overrides || {}
    ) as Promise<GatewayTokenClientERC2771Test>;
  }
  override getDeployTransaction(
    gatewayTokenContract: PromiseOrValue<string>,
    gatekeeperNetwork: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      gatewayTokenContract,
      gatekeeperNetwork,
      overrides || {}
    );
  }
  override attach(address: string): GatewayTokenClientERC2771Test {
    return super.attach(address) as GatewayTokenClientERC2771Test;
  }
  override connect(signer: Signer): GatewayTokenClientERC2771Test__factory {
    return super.connect(signer) as GatewayTokenClientERC2771Test__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayTokenClientERC2771TestInterface {
    return new utils.Interface(_abi) as GatewayTokenClientERC2771TestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GatewayTokenClientERC2771Test {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GatewayTokenClientERC2771Test;
  }
}
