/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ChargeHandler,
  ChargeHandlerInterface,
} from "../../contracts/ChargeHandler";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedAllowance",
        type: "uint256",
      },
    ],
    name: "Charge__IncorrectAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValue",
        type: "uint256",
      },
    ],
    name: "Charge__IncorrectValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Charge__TransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "Common__MissingAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "gatewayTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    name: "ApprovalSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum ChargeType",
            name: "chargeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenSender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Charge",
        name: "",
        type: "tuple",
      },
    ],
    name: "ChargePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "CHARGE_CALLER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum ChargeType",
            name: "chargeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenSender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct Charge",
        name: "charge",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    name: "handleCharge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gatewayTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    name: "setApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "setRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b608051611bb9610119600039600081816103b4015281816103f40152818161047c015281816104bc01526105340152611bb96000f3fe6080604052600436106100c85760003560e01c806391d148541161007a57806391d14854146101ca578063a217fddf146101ea578063a2793ecd146101ff578063c4d66de814610212578063d547741f14610232578063dce5535614610252578063dff8720314610286578063f4536007146102a657600080fd5b806301ffc9a7146100cd578063248a9ca3146101025780632f2ff15d1461014057806336568abe146101625780633659cfe6146101825780634f1ef286146101a257806352d1902d146101b5575b600080fd5b3480156100d957600080fd5b506100ed6100e8366004611655565b6102c6565b60405190151581526020015b60405180910390f35b34801561010e57600080fd5b5061013261011d36600461167f565b600090815260c9602052604090206001015490565b6040519081526020016100f9565b34801561014c57600080fd5b5061016061015b3660046116b4565b6102fd565b005b34801561016e57600080fd5b5061016061017d3660046116b4565b610327565b34801561018e57600080fd5b5061016061019d3660046116e0565b6103aa565b6101606101b0366004611711565b610472565b3480156101c157600080fd5b50610132610527565b3480156101d657600080fd5b506100ed6101e53660046116b4565b6105d5565b3480156101f657600080fd5b50610132600081565b61016061020d3660046117d3565b610600565b34801561021e57600080fd5b5061016061022d3660046116e0565b61068d565b34801561023e57600080fd5b5061016061024d3660046116b4565b6107d8565b34801561025e57600080fd5b506101327fe1388d384fa3f077843349f63aa6fc30015dd9877d66f232b921dd625892887f81565b34801561029257600080fd5b506101606102a13660046116b4565b6107fd565b3480156102b257600080fd5b506101606102c1366004611804565b610812565b60006001600160e01b03198216637965db0b60e01b14806102f757506301ffc9a760e01b6001600160e01b03198316145b92915050565b600082815260c96020526040902060010154610318816108a4565b61032283836108ae565b505050565b6001600160a01b038116331461039c5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6103a68282610934565b5050565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036103f25760405162461bcd60e51b815260040161039390611846565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661042461099b565b6001600160a01b03161461044a5760405162461bcd60e51b815260040161039390611892565b610453816109b7565b6040805160008082526020820190925261046f918391906109c2565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036104ba5760405162461bcd60e51b815260040161039390611846565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104ec61099b565b6001600160a01b0316146105125760405162461bcd60e51b815260040161039390611892565b61051b826109b7565b6103a6828260016109c2565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105c25760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610393565b50600080516020611b3d83398151915290565b600091825260c9602090815260408084206001600160a01b0393909316845291905290205460ff1690565b7fe1388d384fa3f077843349f63aa6fc30015dd9877d66f232b921dd625892887f61062a816108a4565b600161063c6040850160208601611903565b600281111561064d5761064d6118de565b0361065b5761032283610b2d565b600261066d6040850160208601611903565b600281111561067e5761067e6118de565b03610322576103228383610c18565b600054610100900460ff16158080156106ad5750600054600160ff909116105b806106c75750303b1580156106c7575060005460ff166001145b61072a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610393565b6000805460ff19166001179055801561074d576000805461ff0019166101001790555b6001600160a01b03821661077457604051630ca2c90160e21b815260040160405180910390fd5b61077c610de1565b610784610de1565b61078f600083610e4e565b80156103a6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b600082815260c960205260409020600101546107f3816108a4565b6103228383610934565b6000610808816108a4565b6103228383610e4e565b33600090815260fb602090815260408083206001600160a01b038089168552908352818420908716845282528083208484529091529020829055604080516001600160a01b03808716825285166020820152908101839052606081018290527f37ca6fb8e5d1bbdc9b33c1e1ef3c2e98b97be1409fd474a8fdde0bf612b1be2f9060800160405180910390a150505050565b61046f8133610e58565b6108b882826105d5565b6103a657600082815260c9602090815260408083206001600160a01b03851684529091529020805460ff191660011790556108f03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b61093e82826105d5565b156103a657600082815260c9602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080516020611b3d833981519152546001600160a01b031690565b60006103a6816108a4565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156109f55761032283610eb1565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610a4f575060408051601f3d908101601f19168201909252610a4c9181019061191e565b60015b610ab25760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610393565b600080516020611b3d8339815191528114610b215760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610393565b50610322838383610f4d565b34813514610b5757604051631e547ded60e21b815234600482015281356024820152604401610393565b7f435e19089f6ae5362a112155f011980907d2ff69b4c2bb894f8324260650ee6a81604051610b869190611937565b60405180910390a16000610ba060a08301608084016116e0565b6001600160a01b0316826000013560405160006040518083038185875af1925050503d8060008114610bee576040519150601f19603f3d011682016040523d82523d6000602084013e610bf3565b606091505b50509050806103a657604051636d6cc4a760e01b815282356004820152602401610393565b3415610c4057604051631e547ded60e21b815234600482015260006024820152604401610393565b6000610c5260608401604085016116e0565b905060006001600160a01b03821663dd62ed3e610c7560808701606088016116e0565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa158015610cbf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce3919061191e565b90508335811015610d115760405163431cec8960e11b81526004810182905284356024820152604401610393565b600080610d40610d2760808801606089016116e0565b33610d3860608a0160408b016116e0565b893589610f78565b9150915081610d6c5760405163431cec8960e11b81526004810182905286356024820152604401610393565b7f435e19089f6ae5362a112155f011980907d2ff69b4c2bb894f8324260650ee6a86604051610d9b9190611937565b60405180910390a1610dd9610db660808801606089016116e0565b610dc660a0890160808a016116e0565b6001600160a01b03871691908935611092565b505050505050565b600054610100900460ff16610e4c5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401610393565b565b6103a682826108ae565b610e6282826105d5565b6103a657610e6f816110ec565b610e7a8360206110fe565b604051602001610e8b9291906119dc565b60408051601f198184030181529082905262461bcd60e51b825261039391600401611a4b565b6001600160a01b0381163b610f1e5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610393565b600080516020611b3d83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610f56836112a1565b600082511180610f635750805b1561032257610f7283836112e1565b50505050565b6001600160a01b03808616600090815260fb602090815260408083208885168452825280832093871683529281528282208483529052908120548190841115610ffc5750506001600160a01b03808616600090815260fb60209081526040808320888516845282528083209387168352928152828220848352905290812054611088565b6001600160a01b03808816600090815260fb602090815260408083208a851684528252808320938916835292815282822086835290529081208054869290611045908490611a94565b9091555050506001600160a01b03808716600090815260fb6020908152604080832089851684528252808320938816835292815282822085835290522054600191505b9550959350505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610f729085906113d5565b60606102f76001600160a01b03831660145b6060600061110d836002611aa7565b611118906002611abe565b67ffffffffffffffff811115611130576111306116fb565b6040519080825280601f01601f19166020018201604052801561115a576020820181803683370190505b509050600360fc1b8160008151811061117557611175611ad1565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106111a4576111a4611ad1565b60200101906001600160f81b031916908160001a90535060006111c8846002611aa7565b6111d3906001611abe565b90505b600181111561124b576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061120757611207611ad1565b1a60f81b82828151811061121d5761121d611ad1565b60200101906001600160f81b031916908160001a90535060049490941c9361124481611ae7565b90506111d6565b50831561129a5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610393565b9392505050565b6112aa81610eb1565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6113495760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610393565b600080846001600160a01b0316846040516113649190611afe565b600060405180830381855af49150503d806000811461139f576040519150601f19603f3d011682016040523d82523d6000602084013e6113a4565b606091505b50915091506113cc8282604051806060016040528060278152602001611b5d602791396114a7565b95945050505050565b600061142a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114c09092919063ffffffff16565b80519091501561032257808060200190518101906114489190611b1a565b6103225760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610393565b606083156114b657508161129a565b61129a83836114d7565b60606114cf8484600085611501565b949350505050565b8151156114e75781518083602001fd5b8060405162461bcd60e51b81526004016103939190611a4b565b6060824710156115625760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610393565b600080866001600160a01b0316858760405161157e9190611afe565b60006040518083038185875af1925050503d80600081146115bb576040519150601f19603f3d011682016040523d82523d6000602084013e6115c0565b606091505b50915091506115d1878383876115dc565b979650505050505050565b6060831561164b578251600003611644576001600160a01b0385163b6116445760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610393565b50816114cf565b6114cf83836114d7565b60006020828403121561166757600080fd5b81356001600160e01b03198116811461129a57600080fd5b60006020828403121561169157600080fd5b5035919050565b80356001600160a01b03811681146116af57600080fd5b919050565b600080604083850312156116c757600080fd5b823591506116d760208401611698565b90509250929050565b6000602082840312156116f257600080fd5b61129a82611698565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561172457600080fd5b61172d83611698565b9150602083013567ffffffffffffffff8082111561174a57600080fd5b818501915085601f83011261175e57600080fd5b813581811115611770576117706116fb565b604051601f8201601f19908116603f01168101908382118183101715611798576117986116fb565b816040528281528860208487010111156117b157600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008082840360c08112156117e757600080fd5b60a08112156117f557600080fd5b50919360a08501359350915050565b6000806000806080858703121561181a57600080fd5b61182385611698565b935061183160208601611698565b93969395505050506040820135916060013590565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b8035600381106116af57600080fd5b60006020828403121561191557600080fd5b61129a826118f4565b60006020828403121561193057600080fd5b5051919050565b8135815260a0810161194b602084016118f4565b6003811061196957634e487b7160e01b600052602160045260246000fd5b602083015261197a60408401611698565b6001600160a01b0381811660408501528061199760608701611698565b166060850152806119aa60808701611698565b166080850152505092915050565b60005b838110156119d35781810151838201526020016119bb565b50506000910152565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351611a0e8160178501602088016119b8565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611a3f8160288401602088016119b8565b01602801949350505050565b6020815260008251806020840152611a6a8160408501602087016119b8565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b818103818111156102f7576102f7611a7e565b80820281158282048414176102f7576102f7611a7e565b808201808211156102f7576102f7611a7e565b634e487b7160e01b600052603260045260246000fd5b600081611af657611af6611a7e565b506000190190565b60008251611b108184602087016119b8565b9190910192915050565b600060208284031215611b2c57600080fd5b8151801515811461129a57600080fdfe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122027808b6c0201aa7fdab06231e9d8f044f778d8f381bf795e1613437561132c2564736f6c63430008130033";

type ChargeHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChargeHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChargeHandler__factory extends ContractFactory {
  constructor(...args: ChargeHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChargeHandler> {
    return super.deploy(overrides || {}) as Promise<ChargeHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChargeHandler {
    return super.attach(address) as ChargeHandler;
  }
  override connect(signer: Signer): ChargeHandler__factory {
    return super.connect(signer) as ChargeHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChargeHandlerInterface {
    return new utils.Interface(_abi) as ChargeHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChargeHandler {
    return new Contract(address, _abi, signerOrProvider) as ChargeHandler;
  }
}
