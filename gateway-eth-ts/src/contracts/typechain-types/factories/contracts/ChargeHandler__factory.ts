/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ChargeHandler,
  ChargeHandlerInterface,
} from "../../contracts/ChargeHandler";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedAllowance",
        type: "uint256",
      },
    ],
    name: "Charge__IncorrectAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expectedValue",
        type: "uint256",
      },
    ],
    name: "Charge__InsufficientValue",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Charge__TransferFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "gatewayTokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    name: "ApprovalSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum ChargeType",
            name: "chargeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenSender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        indexed: false,
        internalType: "struct Charge",
        name: "",
        type: "tuple",
      },
    ],
    name: "ChargePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "enum ChargeType",
            name: "chargeType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenSender",
            type: "address",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
        ],
        internalType: "struct Charge",
        name: "charge",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    name: "handleCharge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "gatewayTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "network",
        type: "uint256",
      },
    ],
    name: "setApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161120861011960003960008181610167015281816101b0015281816102380152818161027801526102f401526112086000f3fe60806040526004361061006b5760003560e01c80633659cfe6146100705780634f1ef2861461009257806352d1902d146100a5578063715018a6146100cd5780638da5cb5b146100e2578063a2793ecd1461010a578063f2fde38b1461011d578063f45360071461013d575b600080fd5b34801561007c57600080fd5b5061009061008b366004610dfd565b61015d565b005b6100906100a0366004610e2e565b61022e565b3480156100b157600080fd5b506100ba6102e7565b6040519081526020015b60405180910390f35b3480156100d957600080fd5b50610090610395565b3480156100ee57600080fd5b506097546040516001600160a01b0390911681526020016100c4565b610090610118366004610ef0565b6103a9565b34801561012957600080fd5b50610090610138366004610dfd565b610722565b34801561014957600080fd5b50610090610158366004610f21565b610798565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036101ae5760405162461bcd60e51b81526004016101a590610f63565b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166101e0610828565b6001600160a01b0316146102065760405162461bcd60e51b81526004016101a590610faf565b61020f81610844565b6040805160008082526020820190925261022b9183919061084c565b50565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630036102765760405162461bcd60e51b81526004016101a590610f63565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166102a8610828565b6001600160a01b0316146102ce5760405162461bcd60e51b81526004016101a590610faf565b6102d782610844565b6102e38282600161084c565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103825760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b60648201526084016101a5565b5060008051602061118c83398151915290565b61039d6109b7565b6103a76000610a11565b565b60016103bb6040840160208501611020565b60028111156103cc576103cc610ffb565b036104c25781353410156103fc576040516365a2b20160e01b8152346004820152823560248201526044016101a5565b7f435e19089f6ae5362a112155f011980907d2ff69b4c2bb894f8324260650ee6a8260405161042b919061103b565b60405180910390a1600061044560a0840160808501610dfd565b6001600160a01b0316836000013560405160006040518083038185875af1925050503d8060008114610493576040519150601f19603f3d011682016040523d82523d6000602084013e610498565b606091505b50509050806104bd57604051636d6cc4a760e01b8152833560048201526024016101a5565b505050565b60026104d46040840160208501611020565b60028111156104e5576104e5610ffb565b036102e35760006104fc6060840160408501610dfd565b905060006001600160a01b03821663dd62ed3e61051f6080870160608801610dfd565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604401602060405180830381865afa158015610569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061058d91906110bc565b905083358110156105bb5760405163431cec8960e11b815260048101829052843560248201526044016101a5565b6000806105ea6105d16080880160608901610dfd565b336105e260608a0160408b01610dfd565b893589610a63565b91509150816106165760405163431cec8960e11b815260048101829052863560248201526044016101a5565b7f435e19089f6ae5362a112155f011980907d2ff69b4c2bb894f8324260650ee6a86604051610645919061103b565b60405180910390a160006001600160a01b0385166323b872dd61066e60808a0160608b01610dfd565b61067e60a08b0160808c01610dfd565b60405160e084901b6001600160e01b03191681526001600160a01b03928316600482015291166024820152893560448201526064016020604051808303816000875af11580156106d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f691906110d5565b90508061071957604051636d6cc4a760e01b8152873560048201526024016101a5565b50505050505050565b61072a6109b7565b6001600160a01b03811661078f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a5565b61022b81610a11565b33600090815260c9602090815260408083206001600160a01b03808916855290835281842090871684529091529020828155600101819055604080516001600160a01b03808716825285166020820152908101839052606081018290527f37ca6fb8e5d1bbdc9b33c1e1ef3c2e98b97be1409fd474a8fdde0bf612b1be2f9060800160405180910390a150505050565b60008051602061118c833981519152546001600160a01b031690565b61022b6109b7565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561087f576104bd83610b9a565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156108d9575060408051601f3d908101601f191682019092526108d6918101906110bc565b60015b61093c5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016101a5565b60008051602061118c83398151915281146109ab5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016101a5565b506104bd838383610c36565b6097546001600160a01b031633146103a75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101a5565b609780546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b03808616600090815260c96020908152604080832088851684528252808320938716835292905290812060010154819083141580610ad657506001600160a01b03808816600090815260c9602090815260408083208a8516845282528083209389168352929052205484115b15610b145750506001600160a01b03808616600090815260c96020908152604080832088851684528252808320938716835292905290812054610b90565b6001600160a01b03808816600090815260c9602090815260408083208a85168452825280832093891683529290529081208054869290610b559084906110f7565b9091555050506001600160a01b03808716600090815260c9602090815260408083208985168452825280832093881683529290522054600191505b9550959350505050565b6001600160a01b0381163b610c075760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016101a5565b60008051602061118c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610c3f83610c61565b600082511180610c4c5750805b156104bd57610c5b8383610ca1565b50505050565b610c6a81610b9a565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610d095760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101a5565b600080846001600160a01b031684604051610d24919061113c565b600060405180830381855af49150503d8060008114610d5f576040519150601f19603f3d011682016040523d82523d6000602084013e610d64565b606091505b5091509150610d8c82826040518060600160405280602781526020016111ac60279139610d97565b925050505b92915050565b60608315610da6575081610db0565b610db08383610db7565b9392505050565b815115610dc75781518083602001fd5b8060405162461bcd60e51b81526004016101a59190611158565b80356001600160a01b0381168114610df857600080fd5b919050565b600060208284031215610e0f57600080fd5b610db082610de1565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215610e4157600080fd5b610e4a83610de1565b9150602083013567ffffffffffffffff80821115610e6757600080fd5b818501915085601f830112610e7b57600080fd5b813581811115610e8d57610e8d610e18565b604051601f8201601f19908116603f01168101908382118183101715610eb557610eb5610e18565b81604052828152886020848701011115610ece57600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b60008082840360c0811215610f0457600080fd5b60a0811215610f1257600080fd5b50919360a08501359350915050565b60008060008060808587031215610f3757600080fd5b610f4085610de1565b9350610f4e60208601610de1565b93969395505050506040820135916060013590565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b634e487b7160e01b600052602160045260246000fd5b803560038110610df857600080fd5b60006020828403121561103257600080fd5b610db082611011565b8135815260a0810161104f60208401611011565b6003811061106d57634e487b7160e01b600052602160045260246000fd5b602083015261107e60408401610de1565b6001600160a01b0381811660408501528061109b60608701610de1565b166060850152806110ae60808701610de1565b166080850152505092915050565b6000602082840312156110ce57600080fd5b5051919050565b6000602082840312156110e757600080fd5b81518015158114610db057600080fd5b81810381811115610d9157634e487b7160e01b600052601160045260246000fd5b60005b8381101561113357818101518382015260200161111b565b50506000910152565b6000825161114e818460208701611118565b9190910192915050565b6020815260008251806020840152611177816040850160208701611118565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212204527d3f035c81c40fc4f548f10ac16bc3bf8afc8209adeb15d465671ae6880da64736f6c63430008130033";

type ChargeHandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChargeHandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChargeHandler__factory extends ContractFactory {
  constructor(...args: ChargeHandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChargeHandler> {
    return super.deploy(overrides || {}) as Promise<ChargeHandler>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ChargeHandler {
    return super.attach(address) as ChargeHandler;
  }
  override connect(signer: Signer): ChargeHandler__factory {
    return super.connect(signer) as ChargeHandler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChargeHandlerInterface {
    return new utils.Interface(_abi) as ChargeHandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChargeHandler {
    return new Contract(address, _abi, signerOrProvider) as ChargeHandler;
  }
}
