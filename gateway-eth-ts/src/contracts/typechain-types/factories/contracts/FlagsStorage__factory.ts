/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FlagsStorage,
  FlagsStorageInterface,
} from "../../contracts/FlagsStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Common__MissingAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Common__NotSuperAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "FlagsStorage__FlagAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "FlagsStorage__FlagNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "FlagsStorage__IncorrectVariableLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "FlagsStorage__IndexAlreadyUsed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "FlagAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "FlagRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevSuperAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "superAdmin",
        type: "address",
      },
    ],
    name: "SuperAdminUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "addFlag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "flags",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "indexes",
        type: "uint8[]",
      },
    ],
    name: "addFlags",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "flagIndexes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_superAdmin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "isFlagSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "removeFlag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "flags",
        type: "bytes32[]",
      },
    ],
    name: "removeFlags",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "superAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedFlagsMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSuperAdmin",
        type: "address",
      },
    ],
    name: "updateSuperAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b60805161143761011960003960008181610369015281816103a9015281816104320152818161047201526104ee01526114376000f3fe6080604052600436106100b25760003560e01c8063661870b11161006f578063661870b1146101825780638e7de730146101c4578063a3d0bb2a146101e4578063a64a095614610214578063b3b48bc214610234578063c4d66de814610254578063cae43fd81461027457600080fd5b8063243da6a7146100b757806329575f6a146100e05780633551f2e3146101185780633659cfe61461013a5780634f1ef2861461015a57806352d1902d1461016d575b600080fd5b3480156100c357600080fd5b506100cd60685481565b6040519081526020015b60405180910390f35b3480156100ec57600080fd5b50606754610100906001600160a01b031681565b6040516001600160a01b0390911681526020016100d7565b34801561012457600080fd5b50610138610133366004610fe3565b610294565b005b34801561014657600080fd5b5061013861015536600461103c565b61035e565b610138610168366004611057565b610427565b34801561017957600080fd5b506100cd6104e1565b34801561018e57600080fd5b506101b261019d3660046110fd565b60696020526000908152604090205460ff1681565b60405160ff90911681526020016100d7565b3480156101d057600080fd5b506101386101df3660046110fd565b61058f565b3480156101f057600080fd5b506102046101ff3660046110fd565b6105cb565b60405190151581526020016100d7565b34801561022057600080fd5b5061013861022f366004611127565b6105de565b34801561024057600080fd5b5061013861024f366004611153565b6105f0565b34801561026057600080fd5b5061013861026f36600461103c565b610691565b34801561028057600080fd5b5061013861028f36600461103c565b6107dc565b61029c610867565b805160005b818160ff161015610359576102dc838260ff16815181106102c4576102c4611215565b6020026020010151606561089690919063ffffffff16565b61032257828160ff16815181106102f5576102f5611215565b60200260200101516040516356f1aded60e01b815260040161031991815260200190565b60405180910390fd5b610347838260ff168151811061033a5761033a611215565b60200260200101516108b1565b8061035181611241565b9150506102a1565b505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103a75760405162461bcd60e51b815260040161031990611261565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103d9610917565b6001600160a01b0316146103ff5760405162461bcd60e51b8152600401610319906112ad565b61040881610933565b604080516000808252602082019092526104249183919061093b565b50565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156104705760405162461bcd60e51b815260040161031990611261565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166104a2610917565b6001600160a01b0316146104c85760405162461bcd60e51b8152600401610319906112ad565b6104d182610933565b6104dd8282600161093b565b5050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461057c5760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610319565b506000805160206113bb83398151915290565b610597610867565b6105a2606582610896565b6105c2576040516356f1aded60e01b815260048101829052602401610319565b610424816108b1565b60006105d8606583610896565b92915050565b6105e6610867565b6104dd8282610ab5565b6105f8610867565b805182511461062757815181516040516308d351ab60e01b815260048101929092526024820152604401610319565b815160005b818160ff16101561068b57610679848260ff168151811061064f5761064f611215565b6020026020010151848360ff168151811061066c5761066c611215565b6020026020010151610ab5565b8061068381611241565b91505061062c565b50505050565b600054610100900460ff16158080156106b15750600054600160ff909116105b806106cb5750303b1580156106cb575060005460ff166001145b61072e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610319565b6000805460ff191660011790558015610751576000805461ff0019166101001790555b6001600160a01b03821661077857604051630ca2c90160e21b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b03841617905580156104dd576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6107e4610867565b6001600160a01b03811661080b57604051630ca2c90160e21b815260040160405180910390fd5b6067546040516001600160a01b038084169216907fd0f5553fb48dccd0de81c4705fa3feaf0b9a936a294741cfb724c33b8373f0c190600090a3606780546001600160a01b0319166001600160a01b0392909216919091179055565b6067546001600160a01b0316331461089457604051632957ccdd60e21b8152336004820152602401610319565b565b600081815260018301602052604081205415155b9392505050565b6108bc606582610b80565b50600081815260696020526040808220805460688054600160ff90931692831b19169055815460ff19169091559051909183917fb4e020b0ecc1c15088dc1d0790a96729268843758491c25d3fa0450d8a9ad34d9190a25050565b6000805160206113bb833981519152546001600160a01b031690565b610424610867565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff161561096e5761035983610b8c565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109a757600080fd5b505afa9250505080156109d7575060408051601f3d908101601f191682019092526109d4918101906112f9565b60015b610a3a5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610319565b6000805160206113bb8339815191528114610aa95760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610319565b50610359838383610c28565b606854600160ff83161b1615610ae35760405163f70e2d6b60e01b815260ff82166004820152602401610319565b610aee606583610896565b15610b0f576040516313ac19e560e01b815260048101839052602401610319565b6000828152606960205260409020805460ff191660ff8316179055610b35606583610c4d565b50606854600160ff83161b1760685560405160ff8216815282907fdd0fa0fc5900cc449b60e07ecc54e117f3828a22f16d74c408c3d456d69f25fe9060200160405180910390a25050565b60006108aa8383610c59565b6001600160a01b0381163b610bf95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610319565b6000805160206113bb83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610c3183610d4c565b600082511180610c3e5750805b156103595761068b8383610d8c565b60006108aa8383610e80565b60008181526001830160205260408120548015610d42576000610c7d600183611312565b8554909150600090610c9190600190611312565b9050818114610cf6576000866000018281548110610cb157610cb1611215565b9060005260206000200154905080876000018481548110610cd457610cd4611215565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d0757610d07611329565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105d8565b60009150506105d8565b610d5581610b8c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610df45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610319565b600080846001600160a01b031684604051610e0f919061136b565b600060405180830381855af49150503d8060008114610e4a576040519150601f19603f3d011682016040523d82523d6000602084013e610e4f565b606091505b5091509150610e7782826040518060600160405280602781526020016113db60279139610ecf565b95945050505050565b6000818152600183016020526040812054610ec7575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105d8565b5060006105d8565b60608315610ede5750816108aa565b6108aa8383815115610ef35781518083602001fd5b8060405162461bcd60e51b81526004016103199190611387565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f4c57610f4c610f0d565b604052919050565b600067ffffffffffffffff821115610f6e57610f6e610f0d565b5060051b60200190565b600082601f830112610f8957600080fd5b81356020610f9e610f9983610f54565b610f23565b82815260059290921b84018101918181019086841115610fbd57600080fd5b8286015b84811015610fd85780358352918301918301610fc1565b509695505050505050565b600060208284031215610ff557600080fd5b813567ffffffffffffffff81111561100c57600080fd5b61101884828501610f78565b949350505050565b80356001600160a01b038116811461103757600080fd5b919050565b60006020828403121561104e57600080fd5b6108aa82611020565b6000806040838503121561106a57600080fd5b61107383611020565b915060208084013567ffffffffffffffff8082111561109157600080fd5b818601915086601f8301126110a557600080fd5b8135818111156110b7576110b7610f0d565b6110c9601f8201601f19168501610f23565b915080825287848285010111156110df57600080fd5b80848401858401376000848284010152508093505050509250929050565b60006020828403121561110f57600080fd5b5035919050565b803560ff8116811461103757600080fd5b6000806040838503121561113a57600080fd5b8235915061114a60208401611116565b90509250929050565b6000806040838503121561116657600080fd5b823567ffffffffffffffff8082111561117e57600080fd5b61118a86838701610f78565b93506020915081850135818111156111a157600080fd5b85019050601f810186136111b457600080fd5b80356111c2610f9982610f54565b81815260059190911b820183019083810190888311156111e157600080fd5b928401925b82841015611206576111f784611116565b825292840192908401906111e6565b80955050505050509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156112585761125861122b565b60010192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561130b57600080fd5b5051919050565b6000828210156113245761132461122b565b500390565b634e487b7160e01b600052603160045260246000fd5b60005b8381101561135a578181015183820152602001611342565b8381111561068b5750506000910152565b6000825161137d81846020870161133f565b9190910192915050565b60208152600082518060208401526113a681604085016020870161133f565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a264697066735822122085eb1de7edd171a2e5b4b699147d638a1d9767b3e6ca41d7b8a364d368c9b11464736f6c63430008090033";

type FlagsStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlagsStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlagsStorage__factory extends ContractFactory {
  constructor(...args: FlagsStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlagsStorage> {
    return super.deploy(overrides || {}) as Promise<FlagsStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FlagsStorage {
    return super.attach(address) as FlagsStorage;
  }
  override connect(signer: Signer): FlagsStorage__factory {
    return super.connect(signer) as FlagsStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlagsStorageInterface {
    return new utils.Interface(_abi) as FlagsStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlagsStorage {
    return new Contract(address, _abi, signerOrProvider) as FlagsStorage;
  }
}
