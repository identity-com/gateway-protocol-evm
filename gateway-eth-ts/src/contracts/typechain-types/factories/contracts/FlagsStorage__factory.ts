/* Autogenerated file. Do not edit manually. */
// @ts-nocheck
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FlagsStorage,
  FlagsStorageInterface,
} from "../../contracts/FlagsStorage";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Common__MissingAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Common__NotSuperAdmin",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "FlagsStorage__FlagAlreadyExists",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "FlagsStorage__FlagNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expected",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
    ],
    name: "FlagsStorage__IncorrectVariableLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "FlagsStorage__IndexAlreadyUsed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "FlagAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "FlagRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "prevSuperAdmin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "superAdmin",
        type: "address",
      },
    ],
    name: "SuperAdminUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "index",
        type: "uint8",
      },
    ],
    name: "addFlag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "flags",
        type: "bytes32[]",
      },
      {
        internalType: "uint8[]",
        name: "indexes",
        type: "uint8[]",
      },
    ],
    name: "addFlags",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "flagIndexes",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_superAdmin",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "isFlagSupported",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "flag",
        type: "bytes32",
      },
    ],
    name: "removeFlag",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "flags",
        type: "bytes32[]",
      },
    ],
    name: "removeFlags",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "superAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "supportedFlagsMask",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newSuperAdmin",
        type: "address",
      },
    ],
    name: "updateSuperAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b5061001d610022565b6100e2565b600054610100900460ff161561008e5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811610156100e0576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6080516113b361011960003960008181610366015281816103a60152818161042f0152818161046f01526104eb01526113b36000f3fe6080604052600436106100b25760003560e01c8063661870b11161006f578063661870b1146101825780638e7de730146101c4578063a3d0bb2a146101e4578063a64a095614610214578063b3b48bc214610234578063c4d66de814610254578063cae43fd81461027457600080fd5b8063243da6a7146100b757806329575f6a146100e05780633551f2e3146101185780633659cfe61461013a5780634f1ef2861461015a57806352d1902d1461016d575b600080fd5b3480156100c357600080fd5b506100cd60685481565b6040519081526020015b60405180910390f35b3480156100ec57600080fd5b50606754610100906001600160a01b031681565b6040516001600160a01b0390911681526020016100d7565b34801561012457600080fd5b50610138610133366004610f63565b610294565b005b34801561014657600080fd5b50610138610155366004610fc1565b61035b565b610138610168366004610ff2565b610424565b34801561017957600080fd5b506100cd6104de565b34801561018e57600080fd5b506101b261019d3660046110b4565b60696020526000908152604090205460ff1681565b60405160ff90911681526020016100d7565b3480156101d057600080fd5b506101386101df3660046110b4565b61058c565b3480156101f057600080fd5b506102046101ff3660046110b4565b6105c8565b60405190151581526020016100d7565b34801561022057600080fd5b5061013861022f3660046110de565b6105db565b34801561024057600080fd5b5061013861024f36600461110a565b6105ed565b34801561026057600080fd5b5061013861026f366004610fc1565b610696565b34801561028057600080fd5b5061013861028f366004610fc1565b6107e1565b61029c61086c565b8060005b818160ff161015610355576102da84848360ff168181106102c3576102c3611176565b90506020020135606561089b90919063ffffffff16565b61031f5783838260ff168181106102f3576102f3611176565b905060200201356040516356f1aded60e01b815260040161031691815260200190565b60405180910390fd5b61034384848360ff1681811061033757610337611176565b905060200201356108b6565b8061034d816111a2565b9150506102a0565b50505050565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156103a45760405162461bcd60e51b8152600401610316906111c2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166103d661091c565b6001600160a01b0316146103fc5760405162461bcd60e51b81526004016103169061120e565b61040581610938565b6040805160008082526020820190925261042191839190610940565b50565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016141561046d5760405162461bcd60e51b8152600401610316906111c2565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661049f61091c565b6001600160a01b0316146104c55760405162461bcd60e51b81526004016103169061120e565b6104ce82610938565b6104da82826001610940565b5050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105795760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c6044820152771b1959081d1a1c9bdd59da0819195b1959d85d1958d85b1b60421b6064820152608401610316565b5060008051602061133783398151915290565b61059461086c565b61059f60658261089b565b6105bf576040516356f1aded60e01b815260048101829052602401610316565b610421816108b6565b60006105d560658361089b565b92915050565b6105e361086c565b6104da8282610abf565b6105f561086c565b82811461061f576040516308d351ab60e01b81526004810184905260248101829052604401610316565b8260005b818160ff16101561068e5761067c86868360ff1681811061064657610646611176565b9050602002013585858460ff1681811061066257610662611176565b9050602002016020810190610677919061125a565b610abf565b80610686816111a2565b915050610623565b505050505050565b600054610100900460ff16158080156106b65750600054600160ff909116105b806106d05750303b1580156106d0575060005460ff166001145b6107335760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610316565b6000805460ff191660011790558015610756576000805461ff0019166101001790555b6001600160a01b03821661077d57604051630ca2c90160e21b815260040160405180910390fd5b606780546001600160a01b0319166001600160a01b03841617905580156104da576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15050565b6107e961086c565b6001600160a01b03811661081057604051630ca2c90160e21b815260040160405180910390fd5b6067546040516001600160a01b038084169216907fd0f5553fb48dccd0de81c4705fa3feaf0b9a936a294741cfb724c33b8373f0c190600090a3606780546001600160a01b0319166001600160a01b0392909216919091179055565b6067546001600160a01b0316331461089957604051632957ccdd60e21b8152336004820152602401610316565b565b600081815260018301602052604081205415155b9392505050565b6108c1606582610b8a565b50600081815260696020526040808220805460688054600160ff90931692831b19169055815460ff19169091559051909183917fb4e020b0ecc1c15088dc1d0790a96729268843758491c25d3fa0450d8a9ad34d9190a25050565b600080516020611337833981519152546001600160a01b031690565b61042161086c565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff16156109785761097383610b96565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156109b157600080fd5b505afa9250505080156109e1575060408051601f3d908101601f191682019092526109de91810190611275565b60015b610a445760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b6064820152608401610316565b6000805160206113378339815191528114610ab35760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b6064820152608401610316565b50610973838383610c32565b606854600160ff83161b1615610aed5760405163f70e2d6b60e01b815260ff82166004820152602401610316565b610af860658361089b565b15610b19576040516313ac19e560e01b815260048101839052602401610316565b6000828152606960205260409020805460ff191660ff8316179055610b3f606583610c57565b50606854600160ff83161b1760685560405160ff8216815282907fdd0fa0fc5900cc449b60e07ecc54e117f3828a22f16d74c408c3d456d69f25fe9060200160405180910390a25050565b60006108af8383610c63565b6001600160a01b0381163b610c035760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b6064820152608401610316565b60008051602061133783398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b610c3b83610d56565b600082511180610c485750805b15610973576103558383610d96565b60006108af8383610e8a565b60008181526001830160205260408120548015610d4c576000610c8760018361128e565b8554909150600090610c9b9060019061128e565b9050818114610d00576000866000018281548110610cbb57610cbb611176565b9060005260206000200154905080876000018481548110610cde57610cde611176565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610d1157610d116112a5565b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506105d5565b60009150506105d5565b610d5f81610b96565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b610dfe5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610316565b600080846001600160a01b031684604051610e1991906112e7565b600060405180830381855af49150503d8060008114610e54576040519150601f19603f3d011682016040523d82523d6000602084013e610e59565b606091505b5091509150610e81828260405180606001604052806027815260200161135760279139610ed9565b95945050505050565b6000818152600183016020526040812054610ed1575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556105d5565b5060006105d5565b60608315610ee85750816108af565b6108af8383815115610efd5781518083602001fd5b8060405162461bcd60e51b81526004016103169190611303565b60008083601f840112610f2957600080fd5b50813567ffffffffffffffff811115610f4157600080fd5b6020830191508360208260051b8501011115610f5c57600080fd5b9250929050565b60008060208385031215610f7657600080fd5b823567ffffffffffffffff811115610f8d57600080fd5b610f9985828601610f17565b90969095509350505050565b80356001600160a01b0381168114610fbc57600080fd5b919050565b600060208284031215610fd357600080fd5b6108af82610fa5565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561100557600080fd5b61100e83610fa5565b9150602083013567ffffffffffffffff8082111561102b57600080fd5b818501915085601f83011261103f57600080fd5b81358181111561105157611051610fdc565b604051601f8201601f19908116603f0116810190838211818310171561107957611079610fdc565b8160405282815288602084870101111561109257600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b6000602082840312156110c657600080fd5b5035919050565b803560ff81168114610fbc57600080fd5b600080604083850312156110f157600080fd5b82359150611101602084016110cd565b90509250929050565b6000806000806040858703121561112057600080fd5b843567ffffffffffffffff8082111561113857600080fd5b61114488838901610f17565b9096509450602087013591508082111561115d57600080fd5b5061116a87828801610f17565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8114156111b9576111b961118c565b60010192915050565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b60006020828403121561126c57600080fd5b6108af826110cd565b60006020828403121561128757600080fd5b5051919050565b6000828210156112a0576112a061118c565b500390565b634e487b7160e01b600052603160045260246000fd5b60005b838110156112d65781810151838201526020016112be565b838111156103555750506000910152565b600082516112f98184602087016112bb565b9190910192915050565b60208152600082518060208401526113228160408501602087016112bb565b601f01601f1916919091016040019291505056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220182456aa0c2de343f71c35ad7b0c3f31b204a392395070b4a38b379121f6b3a464736f6c63430008090033";

type FlagsStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlagsStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlagsStorage__factory extends ContractFactory {
  constructor(...args: FlagsStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlagsStorage> {
    return super.deploy(overrides || {}) as Promise<FlagsStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FlagsStorage {
    return super.attach(address) as FlagsStorage;
  }
  override connect(signer: Signer): FlagsStorage__factory {
    return super.connect(signer) as FlagsStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlagsStorageInterface {
    return new utils.Interface(_abi) as FlagsStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlagsStorage {
    return new Contract(address, _abi, signerOrProvider) as FlagsStorage;
  }
}
